<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.2">Jekyll</generator><link href="http://localhost:4000/portfolio/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/portfolio/" rel="alternate" type="text/html" /><updated>2018-12-06T22:53:27+00:00</updated><id>http://localhost:4000/portfolio/</id><title type="html">Marco Moroni</title><subtitle>Ciao, here's my portfolio.</subtitle><entry><title type="html">Clock</title><link href="http://localhost:4000/portfolio/clock/" rel="alternate" type="text/html" title="Clock" /><published>2018-09-09T00:00:00+01:00</published><updated>2018-09-09T00:00:00+01:00</updated><id>http://localhost:4000/portfolio/clock</id><content type="html" xml:base="http://localhost:4000/portfolio/clock/">&lt;p&gt;&lt;img src=&quot;/portfolio/assets/clock/clock-sand.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/portfolio/assets/clock/clock-sky.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This is the clock you can find on my phone home screen. I made it using &lt;a href=&quot;https://play.google.com/store/apps/details?id=org.kustom.wallpaper&amp;amp;hl=en_GB&quot;&gt;KWLP&lt;/a&gt; and it was inspired by the Prague astronomical clock (that you can see below) and possibly by Dumbledore’s pocket watch.&lt;/p&gt;

&lt;p class=&quot;no-modal&quot;&gt;&lt;img src=&quot;/portfolio/assets/clock/fabrizio-verrecchia-180315-unsplash.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Here’s how it works:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/portfolio/assets/clock/clock-explained.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You’re probably wondering &lt;em&gt;why&lt;/em&gt;. That’s a very good question.&lt;/p&gt;</content><author><name></name></author><category term="android" /><summary type="html"></summary></entry><entry><title type="html">Azucena</title><link href="http://localhost:4000/portfolio/azucena/" rel="alternate" type="text/html" title="Azucena" /><published>2018-05-02T00:00:00+01:00</published><updated>2018-05-02T00:00:00+01:00</updated><id>http://localhost:4000/portfolio/azucena</id><content type="html" xml:base="http://localhost:4000/portfolio/azucena/">&lt;p&gt;&lt;em&gt;Azucena&lt;/em&gt; has been my first complete game. &lt;a href=&quot;https://marcomoroni.github.io/azucena/&quot;&gt;This is its website&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;I made this game as a university coursework, and the project included a pitch presentation and a game design document.&lt;/p&gt;

&lt;p&gt;I took inspiration mainly from two games: &lt;em&gt;The Legend of Zelda&lt;/em&gt; and &lt;em&gt;&lt;a href=&quot;http://www.heart-machine.com/&quot;&gt;Hyper Light Drifter&lt;/a&gt;&lt;/em&gt;. You play as Azucena, a llama who has to rescue her three babies. Each of them are waiting for you at the end of a level and they can be visited in any order.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/portfolio/assets/azucena/capture_01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It runs on an engine built from scratch in C++, with the help of &lt;a href=&quot;https://www.sfml-dev.org/&quot;&gt;SFML&lt;/a&gt; and &lt;a href=&quot;https://github.com/erincatto/Box2D&quot;&gt;Box2D&lt;/a&gt;. The pieces are the same you would expect to find in any game engine: scenes, entities, components, etc. The game has all the basic technical features necessary to consider a game &lt;em&gt;a game&lt;/em&gt;, for example: a menu, save and load, a tutorial, an ending, sounds and music, support for different screen resolutions, remappable controls and joystick support.&lt;/p&gt;

&lt;p&gt;The source code is &lt;a href=&quot;https://github.com/marcomoroni/azucena&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/portfolio/assets/azucena/capture_04.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/portfolio/assets/azucena/capture_02.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/portfolio/assets/azucena/capture_03.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><category term="games dev" /><summary type="html">Azucena has been my first complete game. This is its website!</summary></entry><entry><title type="html">Lens Vr</title><link href="http://localhost:4000/portfolio/lens-vr/" rel="alternate" type="text/html" title="Lens Vr" /><published>2018-05-01T00:00:00+01:00</published><updated>2018-05-01T00:00:00+01:00</updated><id>http://localhost:4000/portfolio/lens-vr</id><content type="html" xml:base="http://localhost:4000/portfolio/lens-vr/">&lt;p&gt;&lt;img src=&quot;/portfolio/assets/lens-vr/capture07.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This experimental VR application developed for &lt;a href=&quot;https://www.disneyresearch.com/&quot;&gt;Disney Research&lt;/a&gt; lets you navigate through a dataset. One of the controllers is a lens that distorts what you see and magnifies a certain area.&lt;/p&gt;

&lt;p&gt;I worked in a team of six people, and my task was the importation and visualization of the datasets in the &lt;a href=&quot;https://unity3d.com/&quot;&gt;Unity&lt;/a&gt; engine. For this demonstration we used data representing the revenue of different films. It is possible to read the details of each point in the other controller.&lt;/p&gt;

&lt;p&gt;It was awarded as the second best group project of the year.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/portfolio/assets/lens-vr/capture05.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/portfolio/assets/lens-vr/capture06.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/portfolio/assets/lens-vr/capture03.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/portfolio/assets/lens-vr/capture01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/portfolio/assets/lens-vr/capture02.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/portfolio/assets/lens-vr/capture04.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/portfolio/assets/lens-vr/capture08.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><category term="unity" /><category term="vr" /><category term="data visualisation" /><summary type="html"></summary></entry><entry><title type="html">Physics Based Animation</title><link href="http://localhost:4000/portfolio/pba/" rel="alternate" type="text/html" title="Physics Based Animation" /><published>2017-12-01T00:00:00+00:00</published><updated>2017-12-01T00:00:00+00:00</updated><id>http://localhost:4000/portfolio/physics-based-animation</id><content type="html" xml:base="http://localhost:4000/portfolio/pba/">&lt;p&gt;This is a set of physics-based animations I made at university using C++. &lt;a href=&quot;https://github.com/marcomoroni/set09119&quot;&gt;Here’s the code on GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;flag&quot;&gt;Flag&lt;/h3&gt;

&lt;p&gt;These particles are connected by springs and I applied an isotropic wind to the the triangulated cloth (not to each individual particles).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/portfolio/assets/pba/flag.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;point-gravity&quot;&gt;Point gravity&lt;/h3&gt;

&lt;p&gt;Here you can see a group of particles that are affected by two points of gravity. The gravity, just as you would expect, is stronger the closer to these points and null after a certain set distance.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/portfolio/assets/pba/point.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;newtons-gravity-between-any-two-bodies&quot;&gt;Newton’s gravity between any two bodies&lt;/h3&gt;

&lt;p&gt;While the previous simulation does not use any physically correct gravitational formula, this one uses Newton’s law of gravity: every two particles with mass are affected by each other. To be able to see such interactions I decided to make them stick together once they get very close.&lt;/p&gt;

&lt;p&gt;The lighter particle has a higher mass.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/portfolio/assets/pba/newton.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;super-mario-galaxys-gravity&quot;&gt;&lt;em&gt;Super Mario Galaxy&lt;/em&gt;’s gravity&lt;/h3&gt;

&lt;p&gt;In &lt;em&gt;Super Mario Galaxy&lt;/em&gt; the player is able to walk in planetoids of any shape and size. This is possible because bodies are affected by the gravity of only one planetoid at once and the gravity direction is the inverse of the normal of (usually) the closest surface.&lt;/p&gt;

&lt;p&gt;I’ve managed to apply this principle to particles in box-shaped planetoids. The gravity direction is the normalised vector from the particle to a point &lt;em&gt;U&lt;/em&gt;, where &lt;em&gt;U&lt;/em&gt; is the point on (or in) the planetoid closest to the particle.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/portfolio/assets/pba/smg.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;rigidbody-obb&quot;&gt;RigidBody (OBB)&lt;/h3&gt;

&lt;p&gt;This is a rigidbody with the shape of a box (OBB) colliding with a plane.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/portfolio/assets/pba/cube.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;collisions-between-obbs&quot;&gt;Collisions between OBBs&lt;/h3&gt;

&lt;p&gt;This last simulation has two OBBs colliding with each other.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/portfolio/assets/pba/domino.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><category term="physics" /><summary type="html">This is a set of physics-based animations I made at university using C++. Here’s the code on GitHub.</summary></entry><entry><title type="html">Website</title><link href="http://localhost:4000/portfolio/site/" rel="alternate" type="text/html" title="Website" /><published>2017-05-01T00:00:00+01:00</published><updated>2017-05-01T00:00:00+01:00</updated><id>http://localhost:4000/portfolio/website</id><content type="html" xml:base="http://localhost:4000/portfolio/site/">&lt;p&gt;I hope you’re enjoying this simple website because I took care of every little corner.&lt;/p&gt;

&lt;p&gt;I like minimalism, and you’ve probably noticed. I used warm colours and only one accent colour for interactive elements. It was very important for me to have visual consistency and a pleasant experience overall.&lt;/p&gt;

&lt;p&gt;The abstract (or title) of each portfolio entry uses a monospace font: this makes it easier to recognize this element throughout the site and it highlights the fact that this is a portfolio of a developer.&lt;/p&gt;

&lt;p&gt;The navigation is at the bottom of each page, starting from the home. By following it, the user can have a look at all my works in one go. The content of every page is simple and concise with big pictures whenever possible. This is so because the user is most likely an employer, and they have a bunch of other portfolios waiting after mine. &lt;em&gt;Isn’t that right, mr. employer?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;On the top left corner there’s an additional &lt;em&gt;Home&lt;/em&gt; button. I would have preferred not to have it, but usability is important.&lt;/p&gt;

&lt;p&gt;I used &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt; to build it from the ground up. I’m not a web developer but hey, it came out pretty good!&lt;/p&gt;</content><author><name></name></author><category term="web" /><category term="ui / ux" /><summary type="html">I hope you’re enjoying this simple website because I took care of every little corner.</summary></entry><entry><title type="html">Monument Valley Opengl</title><link href="http://localhost:4000/portfolio/mv/" rel="alternate" type="text/html" title="Monument Valley Opengl" /><published>2017-04-01T00:00:00+01:00</published><updated>2017-04-01T00:00:00+01:00</updated><id>http://localhost:4000/portfolio/monument-valley-opengl</id><content type="html" xml:base="http://localhost:4000/portfolio/mv/">&lt;p&gt;&lt;img src=&quot;/portfolio/assets/mv/animated.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This is a coursework I’ve made for a Computer Graphics module. I used &lt;a href=&quot;https://www.opengl.org/&quot;&gt;OpenGL&lt;/a&gt; to recreate a scene that looked like a level from the game &lt;em&gt;&lt;a href=&quot;https://www.monumentvalleygame.com/&quot;&gt;Monument Valley&lt;/a&gt;&lt;/em&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/portfolio/assets/mv/mv_screen.jpg&quot; alt=&quot;A level from the game&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You’ve probably noticed the impossible geometries: I made them by using a camera with an orthographical projection, therefore you can’t perceive depth.&lt;/p&gt;

&lt;p&gt;I used three directional lights facing the three visible surfaces. In this way I have a higher control of the colours I want my scene to have.&lt;/p&gt;

&lt;p&gt;The Phong shader had to be used without the reflection component because reflection is affected by the distance from the camera. Using it would break the illusion of impossible geometries.&lt;/p&gt;

&lt;p&gt;To create the water waves that you can see on the left cube I multiplied two identical normal maps moving in different directions.&lt;/p&gt;

&lt;p&gt;Finally, I worked with frames to allow multiple ones to work at the same time: I can have multiple post-processing effects, such as vignette and inverse colours.&lt;/p&gt;

&lt;p&gt;You can take a look at it on my &lt;a href=&quot;https://github.com/MarcoMoroni/CG_cw2&quot;&gt;GitHub&lt;/a&gt; and you can also read the &lt;a href=&quot;href=&amp;quot;https://github.com/MarcoMoroni/CG_cw2/blob/master/Report/report.pdf&quot;&gt;report&lt;/a&gt; I wrote.&lt;/p&gt;

&lt;p&gt;You should play that game btw, it’s gorgeous.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/portfolio/assets/mv/screen04.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/portfolio/assets/mv/screen06.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/portfolio/assets/mv/screen05.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/portfolio/assets/mv/screen02.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/portfolio/assets/mv/screen07.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><category term="graphics" /><summary type="html"></summary></entry><entry><title type="html">Pearl Puzzle</title><link href="http://localhost:4000/portfolio/pearl/" rel="alternate" type="text/html" title="Pearl Puzzle" /><published>2016-01-01T00:00:00+00:00</published><updated>2016-01-01T00:00:00+00:00</updated><id>http://localhost:4000/portfolio/pearl-puzzle</id><content type="html" xml:base="http://localhost:4000/portfolio/pearl/">&lt;p&gt;&lt;img src=&quot;/portfolio/assets/pearl/title01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The theme for the &lt;a href=&quot;https://globalgamejam.org/&quot;&gt;Global Game Jam 2017&lt;/a&gt; was &lt;em&gt;waves&lt;/em&gt; and because it was my first Game Jam, I decided to keep it simple. I participated with a friend and we had a lot of fun!&lt;/p&gt;

&lt;p&gt;Our idea was to make a &lt;em&gt;Professor Layton&lt;/em&gt; style puzzle game with a seaside theme and use the movement of waves to solve it. We used &lt;a href=&quot;https://unity3d.com/&quot;&gt;Unity&lt;/a&gt; and I drew the assets in &lt;a href=&quot;http://www.pixelmator.com/&quot;&gt;Pixelmator&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here’s how you play it: by pressing the directional arrows you move all the movable pieces on the grid by 1 step in the direction you chose. Your goal is to place all the pearls back to the corresponding shell.&lt;/p&gt;

&lt;p&gt;After the 48 hours we ended up with the two working levels that you can see below.&lt;/p&gt;

&lt;p&gt;You can download this tiny game from my &lt;a href=&quot;https://github.com/MarcoMoroni/ShellPuzzle&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/portfolio/assets/pearl/screen01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/portfolio/assets/pearl/screen01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><category term="game jam" /><category term="games dev" /><category term="unity" /><summary type="html"></summary></entry></feed>